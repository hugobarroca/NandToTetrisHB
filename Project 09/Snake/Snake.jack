class Snake{
    field int size;
    field CoordinateQueue coordinates;
    field Coordinate head;
    field boolean grew;

    constructor Snake new(){
        let coordinates = CoordinateQueue.new(10);
        let head = Coordinate.new(31, 15);
        let size = 1;
        do coordinates.insert(head);
        return this;
    }

    method void move(int direction){
        var Coordinate coordinate;
        var int temp_x;
        var int temp_y;
        
        let temp_x = head.getX();
        let temp_y = head.getY();

        if(direction = 1){let temp_y = temp_y + 1;}
        if(direction = 2){let temp_y = temp_y - 1;}
        if(direction = 3){let temp_x = temp_x - 1;}
        if(direction = 4){let temp_x = temp_x + 1;}

        do Output.printInt(temp_x);
        do Output.printInt(temp_y);
        do Output.printChar(32);

        let coordinate = Coordinate.new(temp_x, temp_y);
        let head = coordinate;

        do coordinates.remove();
        do coordinates.insert(head);


        return;
    }

    method void grow(int direction){
        var Coordinate coordinate;
        var int temp_x;
        var int temp_y;

        let temp_x = head.getX();
        let temp_y = head.getY();

        if(direction = 1){let temp_x = temp_y + 1;}
        if(direction = 2){let temp_x = temp_y - 1;}
        if(direction = 3){let temp_y = temp_x - 1;}
        if(direction = 4){let temp_y = temp_x + 1;}


        if(size > 10){
            let grew = true;
            let size = size + 1;
            let coordinate = Coordinate.new(temp_x, temp_y);
        }
        return;
    }

    method Array getCoordinates(){
        return coordinates;
    }

    method int getSize(){
        return size;
    }

}
