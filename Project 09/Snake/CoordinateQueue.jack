class CoordinateQueue{
    field int size;
    field int last;
    field Array queue;

    constructor CoordinateQueue new(int size){
        let size = size;
        let last = 0;
        let queue = Array.new(size);
        return this;
    }

    method void insert(Coordinate coordinate){
        if(last < 10){
            let queue[last] = coordinate;
            let last = last + 1;
        }
        return;
    }

    method boolean exists(Coordinate coordinate){
        var int i;
        var int arg_x;
        var int arg_y;
        var int temp_x;
        var int temp_y;
        var Coordinate temp_coor;

        let arg_x = coordinate.getX();
        let arg_y = coordinate.getY();
        let i = 0;
        while(i < size){
            let temp_coor = queue[i];
            let temp_x = temp_coor.getX();
            let temp_y = temp_coor.getY();
            if( (temp_x = arg_x) & (temp_y = arg_x) ){
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    method void remove(){
        var int i;
        let i = 0;
        if(last > 0){
            while(i < queue.size()){
                let queue[i] = queue[i + 1];
                let i = i + 1;
            }
            let last = last - 1;
        }
        return;
    }

    method Array getQueue(){
        return queue;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

}
