/* This class represents a Queue data structure, created to hold Coordinate-type objects.
It uses an Array in order to store it's elements. Elements are added from left to right, and are removed also from left to right.
    Fields:
        nrOfElements - Number of elements currently in the Queue.
        arraySize - Size allocated to the Queue's array.
        lastElementIndex - Index of the last element added of the queue. It's updated when an object is inserted. It's -1 when queue is empty.
*/
class CoordinateQueue{
    field Array queueArray;
    field int arraySize;
    field int nrOfElements;
    field int lastElementIndex;


    constructor CoordinateQueue new(int size){
        let arraySize = size;
        let queueArray = Array.new(arraySize);
        let nrOfElements = 0;
        let lastElementIndex = -1;
        return this;
    }

// Inserts a Coordinate into the Queue, into the leftmost side of the queue array, and moves all other objects one to the right.
// If the array is full, it does nothing.
    method void insert(Coordinate coordinate){
        if(lastElementIndex < arraySize - 1){
            let queueArray[lastElementIndex + 1] = coordinate;
            let nrOfElements = nrOfElements + 1;
            let lastElementIndex = lastElementIndex + 1;
        }
        return;
    }

    method void remove(){
        var int i;
        var int secondToLastElementIndex;

        let secondToLastElementIndex = nrOfElements - 1;

        let i = 0;
        while(i < secondToLastElementIndex){
            let queueArray[i] = queueArray[i + 1];
            let i = i + 1;
        }
        
        let nrOfElements = nrOfElements - 1;
        let lastElementIndex = lastElementIndex - 1;

        return;
    }

    method boolean exists(Coordinate coordinate){
        var int i;
        var int arg_x;
        var int arg_y;
        var int temp_x;
        var int temp_y;
        var Coordinate temp_coor;

        let arg_x = coordinate.getX();
        let arg_y = coordinate.getY();
        let i = 0;
        while(i < arraySize){
            let temp_coor = queueArray[i];
            let temp_x = temp_coor.getX();
            let temp_y = temp_coor.getY();
            if( (temp_x = arg_x) & (temp_y = arg_x) ){
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    method Array getArray(){
        return queueArray;
    }

    method int getSize(){
        return arraySize;
    }

    method int getNrElements(){
        return nrOfElements;
    }

    method void printArray(){
        var int i;
        var Coordinate coord;

        let i = 0;

        do Output.printString("[");
        while(i < nrOfElements){
            let coord = queueArray[i];
            do Output.printString("(");
            do Output.printInt(coord.getX());
            do Output.printString(",");
            do Output.printInt(coord.getY());
            do Output.printString(")");
            let i = i + 1;
        }
        do Output.printString("]");
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}
